/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.88
 * Generated at: 2024-05-10 08:37:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.cou;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("   #size { \r\n");
      out.write("      width:100px;\r\n");
      out.write("      float: right;\r\n");
      out.write("   }\r\n");
      out.write("   .page-link {\r\n");
      out.write("     color: #000; \r\n");
      out.write("     background-color: #fff;\r\n");
      out.write("     border: 1px solid #fff;\r\n");
      out.write("     border-radius : 15%; \r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .page-item.active .page-link {\r\n");
      out.write("    z-index: 1;\r\n");
      out.write("    color: #4A6BD6;\r\n");
      out.write("    font-weight:bold;\r\n");
      out.write("    background-color: #f1f1f1;\r\n");
      out.write("    border-color: #ccc;\r\n");
      out.write("    \r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .page-link:focus, .page-link:hover {\r\n");
      out.write("     color: #000;\r\n");
      out.write("     background-color: #fafafa; \r\n");
      out.write("     border-color: #ccc;\r\n");
      out.write("   }\r\n");
      out.write("</style>\r\n");
      out.write("<div>\r\n");
      out.write("	<h1>강좌관리</h1>\r\n");
      out.write("	<div class=\"row\">\r\n");
      out.write("		<div class=\"col-8 col-md-6\">\r\n");
      out.write("		<form name=\"frm\">\r\n");
      out.write("			<div class=\"input-group mb-2\">\r\n");
      out.write("				<select name=\"key\" class=\"form-select\">\r\n");
      out.write("					<option value=\"lname\">강좌이름</option>\r\n");
      out.write("					<option value=\"lcode\">강좌번호</option>\r\n");
      out.write("					<option value=\"pname\">담당교수</option>\r\n");
      out.write("					<option value=\"room\">강의실</option>\r\n");
      out.write("				</select>\r\n");
      out.write("				<input name=\"word\" placeholder=\"검색어\" class=\"form-control ms-2\">\r\n");
      out.write("				<button class=\"btn btn-secondary\">검색</button>\r\n");
      out.write("				<span id=\"total\" class=\"mt-2 ms-3\"></span>\r\n");
      out.write("			</div>\r\n");
      out.write("		</form>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"col\">\r\n");
      out.write("			<select class=\"form-select\" id=\"size\">\r\n");
      out.write("				<option value=\"1\">1명</option>\r\n");
      out.write("				<option value=\"2\">2명</option>\r\n");
      out.write("				<option value=\"3\">3명</option>\r\n");
      out.write("				<option value=\"4\">4명</option>\r\n");
      out.write("				<option value=\"5\" selected>5명</option>\r\n");
      out.write("			</select>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div id=\"div_cou\"></div>\r\n");
      out.write("	<div id=\"pagination\" class=\"pagination justify-content-center mt-5\"></div>\r\n");
      out.write("</div>\r\n");
      out.write("<script id=\"temp_cou\" type=\"x-handlebars-template\">\r\n");
      out.write("	<table class=\"table table-borderd table-hover\">\r\n");
      out.write("		<tr class=\"text-center\">\r\n");
      out.write("			<td>강좌번호</td>\r\n");
      out.write("			<td>강좌이름</td>\r\n");
      out.write("			<td>강의시간</td>\r\n");
      out.write("			<td>강의실</td>\r\n");
      out.write("			<td>신청인원</td>\r\n");
      out.write("			<td>담당교수</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		{{#each .}}\r\n");
      out.write("		<tr class=\"text-center\">\r\n");
      out.write("			<td>{{lcode}}</td>\r\n");
      out.write("			<td><a href=\"/cou/read?lcode={{lcode}}\">{{lname}}</td>\r\n");
      out.write("			<td>{{hours}}</td>\r\n");
      out.write("			<td>{{room}}</td>\r\n");
      out.write("			<td>{{persons}}명/{{capacity}}명</td>\r\n");
      out.write("			<td>{{pname}}({{instructor}})</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		{{/each}}\r\n");
      out.write("	</table>\r\n");
      out.write("</script>\r\n");
      out.write("<script>\r\n");
      out.write("	let page=1;\r\n");
      out.write("	let size=5;\r\n");
      out.write("	let key=\"lname\";\r\n");
      out.write("	let word=\"\";\r\n");
      out.write("	\r\n");
      out.write("	//size 변경될때\r\n");
      out.write("	$(\"#size\").on(\"change\", function(){\r\n");
      out.write("		size=$(\"#size\").val();\r\n");
      out.write("		page=1;\r\n");
      out.write("		//getData();\r\n");
      out.write("		getTotal();\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	//submit 될때\r\n");
      out.write("	$(frm).on(\"submit\", function(e){\r\n");
      out.write("		e.preventDefault();\r\n");
      out.write("		page=1;\r\n");
      out.write("		key=$(frm.key).val();\r\n");
      out.write("		word=$(frm.word).val();\r\n");
      out.write("		//getData();\r\n");
      out.write("		getTotal();\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	//getData();\r\n");
      out.write("	function getData(){\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			type:\"get\",\r\n");
      out.write("			url:\"/cou/list.json\",\r\n");
      out.write("			data:{page, size, key, word},\r\n");
      out.write("			dataType:\"json\",\r\n");
      out.write("			success:function(data){\r\n");
      out.write("				const temp=Handlebars.compile($(\"#temp_cou\").html());\r\n");
      out.write("				$(\"#div_cou\").html(temp(data));\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	getTotal();\r\n");
      out.write("	function getTotal(){\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			type:\"get\",\r\n");
      out.write("			url:\"/cou/total\",\r\n");
      out.write("			data:{key, word},\r\n");
      out.write("			success:function(data){\r\n");
      out.write("				let total=parseInt(data);\r\n");
      out.write("				if(total==0) {\r\n");
      out.write("					alert(\"검색데이터가 없습니다!\");\r\n");
      out.write("					$(frm.word).val(\"\");\r\n");
      out.write("					return;\r\n");
      out.write("				}\r\n");
      out.write("				$(\"#total\").html(\"검색수: \" + total);\r\n");
      out.write("				let totalPage=Math.ceil(total/size);\r\n");
      out.write("				$(\"#pagination\").twbsPagination(\"changeTotalPages\", totalPage, page);\r\n");
      out.write("				\r\n");
      out.write("				if(total > size){\r\n");
      out.write("					$(\"#pagination\").show();\r\n");
      out.write("				}else{\r\n");
      out.write("					$(\"#pagination\").hide();\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	$('#pagination').twbsPagination({\r\n");
      out.write("		totalPages:10, \r\n");
      out.write("		visiblePages: 5, \r\n");
      out.write("		startPage : 1,\r\n");
      out.write("		initiateStartPageClick: false, \r\n");
      out.write("		first:'<i class=\"bi bi-chevron-double-left\"></i>', \r\n");
      out.write("		prev :'<i class=\"bi bi-chevron-left\"></i>',\r\n");
      out.write("		next :'<i class=\"bi bi-chevron-right\"></i>',\r\n");
      out.write("		last :'<i class=\"bi bi-chevron-double-right\"></i>',\r\n");
      out.write("		onPageClick: function (event, clickPage) {\r\n");
      out.write("			 page=clickPage; \r\n");
      out.write("			 getData();\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
